"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Compile = Compile;
const compiler_1 = require("@sinclair/typebox/compiler");
const value_1 = require("@sinclair/typebox/value");
const environment_1 = require("./environment");
const validator_1 = require("./validator");
const typebox_1 = require("../typebox/typebox");
const t = require("@sinclair/typebox");
const g = require("../guard");
// ------------------------------------------------------------------
// CompileDynamic
// ------------------------------------------------------------------
// prettier-ignore
function CompileDynamic(type, references = []) {
    return new compiler_1.TypeCheck(type, references, value => value_1.Value.Check(type, references, value), compiler_1.TypeCompiler.Code(type, references));
}
// ------------------------------------------------------------------
// ResolveTypeCheck
// ------------------------------------------------------------------
function ResolveTypeCheck(type) {
    return (0, environment_1.IsEvalSupported)() ? compiler_1.TypeCompiler.Compile(type) : CompileDynamic(type);
}
/** Compiles a type for high performance validation */
// prettier-ignore
function Compile(...args) {
    const [parameter, type, options] = g.Signature(args);
    const schema = t.ValueGuard.IsString(type) ? (0, typebox_1.TypeBox)(parameter, type, options) : (0, typebox_1.TypeBox)(type);
    const check = ResolveTypeCheck(schema);
    return new validator_1.Validator(check);
}
