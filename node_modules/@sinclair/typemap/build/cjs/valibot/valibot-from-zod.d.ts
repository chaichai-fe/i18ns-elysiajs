import { type TTypeBoxFromZod } from '../typebox/typebox-from-zod';
import { type TValibotFromTypeBox } from './valibot-from-typebox';
import * as t from '@sinclair/typebox';
import * as v from 'valibot';
import * as z from 'zod';
/** Creates a Valibot type from Zod */
export type TValibotFromZod<Type extends z.ZodTypeAny | z.ZodEffects<any>, TypeBox extends t.TSchema = TTypeBoxFromZod<Type>, Result extends v.BaseSchema<any, any, any> = TValibotFromTypeBox<TypeBox>> = Result;
/** Creates a Valibot type from Zod */
export declare function ValibotFromZod<Type extends z.ZodTypeAny | z.ZodEffects<any>, Result extends v.BaseSchema<any, any, any> = TValibotFromZod<Type>>(type: Type): Result;
