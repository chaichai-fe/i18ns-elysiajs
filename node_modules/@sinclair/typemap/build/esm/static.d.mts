import { Validator } from './compile/validator.mjs';
import * as s from '@sinclair/typebox/syntax';
import * as t from '@sinclair/typebox';
import * as v from 'valibot';
import * as z from 'zod';
type BaseSchema = v.BaseSchema<unknown, unknown, v.BaseIssue<unknown>>;
/** Statically infers a type */
export type Static<Type extends object | string> = (Type extends string ? s.TSyntax<{}, Type> : Type extends Validator<infer Type extends t.TSchema> ? t.Static<Type> : Type extends t.TSchema ? t.Static<Type> : Type extends BaseSchema ? v.InferInput<Type> : Type extends z.ZodTypeAny ? z.infer<Type> : never);
export {};
