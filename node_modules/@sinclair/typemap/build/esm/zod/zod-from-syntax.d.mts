import { TTypeBoxFromSyntax } from '../typebox/typebox-from-syntax.mjs';
import { TZodFromTypeBox } from './zod-from-typebox.mjs';
import * as t from '@sinclair/typebox';
import * as z from 'zod';
/** Creates a Zod type from Syntax */
export type TZodFromSyntax<Context extends t.TProperties, Type extends string, TypeBox extends t.TSchema = TTypeBoxFromSyntax<Context, Type>, Result extends z.ZodTypeAny | z.ZodEffects<any> = TZodFromTypeBox<TypeBox>> = Result;
/** Creates a Zod type from Syntax */
export declare function ZodFromSyntax<Context extends t.TProperties, Type extends string>(context: Context, type: Type, options?: t.SchemaOptions): TZodFromSyntax<Context, Type>;
